server:
  port: ${SERVER_PORT:8083}

spring:
  application:
    name: cash

  kafka:
    producer:
      bootstrap-servers: ${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://localhost:8480/realms/bank}

management:
  tracing:
    sampling:
      probability: 1.0

  zipkin:
    tracing:
      endpoint: ${MANAGEMENT_ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}

  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

  metrics:
    export:
      prometheus:
        enabled: true

api:
  account: ${API_ACCOUNT:http://localhost:8082/api/account}
  cash: ${API_CASH:http://localhost:8080/api/cash}
  blocker: ${API_BLOCKER:http://localhost:8080/api/blocker}
  notification: ${API_NOTIFICATION:http://localhost:8080/api/notification}