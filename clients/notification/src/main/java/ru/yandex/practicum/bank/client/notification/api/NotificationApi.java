/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.yandex.practicum.bank.client.notification.api;

import ru.yandex.practicum.bank.client.notification.model.MailDto;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.HttpStatus;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-06-15T00:23:17.622740+03:00[Europe/Moscow]", comments = "Generator version: 7.12.0")
@Validated
@Tag(name = "notification", description = "the notification API")
public interface NotificationApi {

    /**
     * POST /mail : Отправка email-сообщения
     *
     * @param mailDto (required)
     * @return Сообщение успешно отправлено (status code 200)
     */
    @Operation(operationId = "sendMail", summary = "Отправка email-сообщения", tags = { "notification" }, responses = {
            @ApiResponse(responseCode = "200", description = "Сообщение успешно отправлено")
    }, security = {
            @SecurityRequirement(name = "bearerAuth")
    })
    @RequestMapping(method = RequestMethod.POST, value = "/mail", consumes = "application/json")
    @ResponseStatus(HttpStatus.OK)

    void sendMail(
            @Parameter(name = "MailDto", description = "", required = true) @Valid @RequestBody MailDto mailDto);

}
